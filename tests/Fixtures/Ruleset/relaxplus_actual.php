<?php

class relaxplus
{
    public function basic__numeric_literal_separator()
    {
        $integer = 12345678;
        $octal = 0123456;
        $binary = 0b0010010011011010;
        $hexadecimal = 0x3D458F4F;

        // override_existing
        echo 1234_5678;
    }

    /******
     * Multiline comment with arbitrary asterisks count
     ******/
    public function comment__multiline_comment_opening_closing() {}

    public function control_structure__no_superfluous_elseif()
    {
        if (true) {
            return 1;
        } elseif (false) {
            return 2;
        }
    }

    public function operator__assign_null_coalescing_to_coalesce_equal()
    {
        $foo = $foo ?? 1;
    }

    public function operator__ternary_to_null_coalescing()
    {
        $a = true;
        $b = true;

        $sample = isset($a) ? $a : $b;
    }

    /**
     * @link https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/blob/master/doc/rules/phpdoc/phpdoc_no_alias_tag.rst
     */
    public function phpdoc__phpdoc_no_alias_tag()
    {
        /** @type string */
        $foo = 'https://github.com/PHP-CS-Fixer/PHP-CS-Fixer';
    }

    public function string_notation__explicit_string_variable()
    {
        $name = 'foo';
        echo "My name is $name !";
    }

    public function string_notation__string_implicit_backslashes()
    {
        $singleQuoted = 'String with \\" and My\Prefix\\';
        $doubleQuoted = "Interpret my \n but not my \a";
        $hereDoc = <<<HEREDOC
        Interpret my \100 but not my \999
        HEREDOC;
    }

    public function customFixer__NoDoctrineMigrationsGeneratedCommentFixer()
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql('UPDATE t1 SET col1 = col1 + 1');

        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql('UPDATE t1 SET col1 = col1 - 1');
    }

    /**
     * Created by PhpStorm.
     * User: root * Date: 01.01.70
     * Time: 12:00
     */
    public function customFixer__NoPhpStormGeneratedCommentFixer() {}
}

/**
 * class_definition
 */
class  ClassDefinition  extends  Bar  implements  Baz,  BarBaz  {}
final  class  ClassDefinitionFinal  extends  Bar  implements  Baz,  BarBaz  {}
trait  ClassDefinitionTrait  {}
interface Bar extends
    Bar, BarBaz, FooBarBaz {}
$space_before_parenthesis = new class{};
$inline_constructor_arguments= new class(
    $bar,
    $baz
) {};

/**
 * ordered_class_elements
 */
final class OrderedClassElements
{
    use TraiB;
    use TraiA;
    protected static $protStatProp;
    const C1 = 1;
    const C2 = 2;
    public static $pubStatProp1;
    public $pubProp1;
    protected $protProp;
    var $pubProp2;
    private static $privStatProp;
    private $privProp;
    public static $pubStatProp2;
    public $pubProp3;
    protected function __construct() {}
    private static function privStatFunc() {}
    public function pubFunc1() {}
    public function __toString() {}
    protected function protFunc() {}
    function pubFunc2() {}
    public static function pubStatFunc1() {}
    public function pubFunc3() {}
    static function pubStatFunc2() {}
    private function privFunc() {}
    public static function pubStatFunc3() {}
    protected static function protStatFunc() {}
    public function __destruct() {}
}

class MyTest extends \PhpUnit\FrameWork\TestCase
{
    /**
     * @covers Project\NameSpace\Something
     * @coversDefaultClass Project\Default
     * @uses Project\Test\Util
     */
    public function testPhpUnitFqcnAnnotation() {}
}

/**
 * FooRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoUselessDoctrineRepositoryCommentFixer {}
